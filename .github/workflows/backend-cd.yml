name: CD - Deploy Backend
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**
      - .github/workflows/**.yml
jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: david
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bookingdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    defaults:
      run:
        working-directory: backend

    steps:
      - name : Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Started :progress_bar: :fingerscrossed:"}' ${{ secrets.SLACK_WEBHOOK }}

      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD_TOKEN }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"maven: Building with Maven Completed"}' ${{ secrets.SLACK_WEBHOOK }}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tags=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build

      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"docker: Image tag: '${{ steps.build-number.outputs.BUILD_NUMBER }}' pushed to DockerHub :tada:"}' 
            ${{ secrets.SLACK_WEBHOOK }}

      - name: Update Dockerrun.aws.json api image tag with build number
        run: |
          echo "Updating Dockerrun.aws.json before updating Elastic Beanstalk"
          cat Dockerrun.aws.json
          sed -i -E 's_(davidrefai/booking-system:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Updated Dockerrun.aws.json after updating Elastic Beanstalk"
          cat Dockerrun.aws.json

      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"aws: Elastic Beanstalk Deployment Starting :progress_bar: :fingerscrossed:"}'
            ${{ secrets.SLACK_WEBHOOK }}    

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
              aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              application_name: ${{ secrets.EB_APPLICATION_NAME }}
              environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
              version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
              region: ${{ secrets.EB_REGION }}
              version_description: ${{ github.SHA }}
              deployment_package: backend/Dockerrun.aws.json
#              wait_for_deployment: true
#              ignore_filenames: "Dockerrun.aws.json"
      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"githubloading: Committing to repo  :tada:"}'
          ${{ secrets.SLACK_WEBHOOK }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config  user.name "github-actions"
          git config  user.email "github-actions@github.com"
          git add .
          git commit -m "Update Dockerrun.aws.json with new image tag"
          git push
      - name: Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment and commit completed successfully :github_checks_mark: :party_blob: - https://booking-system-backend.eu-west-1.elasticbeanstalk.com/swagger-ui.html"}'
          ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification
        if: always()
        run: |
           curl -X POST -H 'Content-type: application/json' --data '{"text":"Job Status ${{ job.status }}"}
          ' ${{ secrets.SLACK_WEBHOOK }}

          
